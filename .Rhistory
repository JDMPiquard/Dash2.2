lug[,1] <- temp[,1]
View(lug)
lug <- ddply(bookings, "Reason_for_travel", count=length(Cancelled))
lug[,2] <- as.numeric(lug[,2])
#inserting % into field name
temp <- lug
temp[,2] <- round(lug[,2]/sum(lug[,2]), digits = 2)*100
temp[,1] <- paste(lug[,1], ': ',temp[,2],'%', sep='')
lug[,1] <- temp[,1]
lug <- ddply(bookings, "Reason_for_travel",summarise, count=length(Cancelled))
lug[,2] <- as.numeric(lug[,2])
#inserting % into field name
temp <- lug
temp[,2] <- round(lug[,2]/sum(lug[,2]), digits = 2)*100
temp[,1] <- paste(lug[,1], ': ',temp[,2],'%', sep='')
lug[,1] <- temp[,1]
View(lug)
runApp()
library(shinyApps)
library(shinyapps)
deployApp()
deployApp()
update.packages(dplyr)
update.packages('dplyr')
library(dplyr)
sessionInfo()
update.packages('shinyapps')
deployApp()
runApp()
deployApp()
install.packages("curl")
library(curl)
h <- new_handle()
handle_setheaders(h,
"flightCode"= "TP",
"flightNumber"= "338",
"year"= "2015",
"month"= "10",
"day"= "26",
"flightDirection"=
install.packages('httr')
library(httr)
r <- GET('https://microsoft-apiappcaadd5d5acd24a7888196adc2a5fbfd8.azurewebsites.net:443/api/FlightStatus/GetFlightStatus
')
r <- GET("https://microsoft-apiappcaadd5d5acd24a7888196adc2a5fbfd8.azurewebsites.net:443/api/FlightStatus/GetFlightStatus")
r
r <- POST("https://microsoft-apiappcaadd5d5acd24a7888196adc2a5fbfd8.azurewebsites.net:443/api/FlightStatus/GetFlightStatus")
r
?POST
r <- POST("https://microsoft-apiappcaadd5d5acd24a7888196adc2a5fbfd8.azurewebsites.net:443/api/FlightStatus/GetFlightStatus",
add_headers(
Content-Type= "application/json",
Accept= "application/json",
username= "jdpiquard@portr.com",
password= "b0rnh0lt")
r <- POST("https://microsoft-apiappcaadd5d5acd24a7888196adc2a5fbfd8.azurewebsites.net:443/api/FlightStatus/GetFlightStatus",
add_headers(
Content-Type= "application/json",
Accept= "application/json",
username= "jdpiquard@portr.com",
password= "b0rnh0lt"))
headers <- list(Content-Type= "application/json",
Accept= "application/json",
username= "jdpiquard@portr.com",
password= "b0rnh0lt")
headers <- list('Content-Type'= "application/json",
Accept= "application/json",
username= "jdpiquard@portr.com",
password= "b0rnh0lt")
r <- POST("https://microsoft-apiappcaadd5d5acd24a7888196adc2a5fbfd8.azurewebsites.net:443/api/FlightStatus/GetFlightStatus",
add_headers(headers)
)
?add_header
?add_headers
add_headers(a = 1, b = 2)
headers <- c('Content-Type'= "application/json",
'Accept'= "application/json",
'username'= "jdpiquard@portr.com",
'password'= "b0rnh0lt")
r <- POST("https://microsoft-apiappcaadd5d5acd24a7888196adc2a5fbfd8.azurewebsites.net:443/api/FlightStatus/GetFlightStatus",
add_headers(headers))
r
url <- "https://microsoft-apiappcaadd5d5acd24a7888196adc2a5fbfd8.azurewebsites.net:443/api/FlightStatus/GetFlightStatus"
headers <- c('Content-Type'= "application/json",
'Accept'= "application/json",
'username'= "jdpiquard@portr.com",
'password'= "b0rnh0lt")
body <- list(
flightCode= "TP",
flightNumber= "338",
year= "2015",
month= "10",
day= "26",
flightDirection= 1
)
r <- POST(url,
add_headers(headers), body=body)
r
r <- POST(url, body=body,
add_headers(headers))
r
r <- POST(url)
r
body <- list(
'flightCode'= "TP",
'flightNumber'= "338",
'year'= "2015",
'month'= "10",
'day'= "26",
'flightDirection'= 1
)
r <- POST(url, body=body,
add_headers(headers))
r
headers <- c(
'username'= "jdpiquard@portr.com",
'password'= "b0rnh0lt")
r <- POST(url, body=body,
add_headers(headers))
r
content(r, "text")
r <- POST(url,
add_headers(headers))
r
r <- POST(url, body=body,
add_headers(headers))
r
r <- POST(url, body=body, encode="json",
add_headers(headers))
r
content(r,"text")
content(r,"JSON")
content(r,"raw")
content(r,"parsed")
summarizeMI <- function(df, index, pretty = F){
# applies ddply, summarizing df over index
#
# Args:
#
# Returns:
#
# Note that totalDiscounts was disabled since its value is non reliable
temp <- ddply(df, index, summarize,
bookings = length(Cancelled),
totalBags = sum(Total_luggage_No),
meanBags = round(mean(Total_luggage_No),digits=1),
netRevenue = round((sum(transaction_payment_total) - sum(Transaction_payment_credit))/1.2, digits=2),
promoDiscounts = -(sum(Booking_value_total_promotional_discount) + sum(AirPortr_user_booking_value_price_adjustment)),
otherDiscounts = -(-sum(AirPortr_user_booking_value_price_adjustment) + sum(Transaction_payment_credit))
)
temp$meanNetRevenue <- round(temp$netRevenue/temp$bookings, digits = 2)
temp$meanGrossRevenue <- round(temp$meanNetRevenue*1.2, digits = 2)
if (pretty){  # cleans up temp into a compact data frame for use with summary tables
temp <- temp[c(index,"bookings","totalBags","meanBags","netRevenue","promoDiscounts","meanGrossRevenue")]
temp$netRevenue <- sapply(temp$netRevenue*1.2,toCurrency)
temp$promoDiscounts <- sapply(temp$promoDiscounts,toCurrency)
#temp$meanGrossRevenue <- sapply(temp$meanGrossRevenue,toCurrency)
# use shorter names for a more compact table
colnames(temp) <- c(index,"bkgs","bags","avgBag","Revenue","promos","avgRevenue")
# reorder according to relevance
temp <- temp[with(temp,order(-bkgs,-avgRevenue)), ]
rownames(temp) <- NULL
}
summarizeMI <- function(df, index, pretty = F){
# applies ddply, summarizing df over index
#
# Args:
#
# Returns:
#
# Note that totalDiscounts was disabled since its value is non reliable
temp <- ddply(df, index, summarize,
bookings = length(Cancelled),
totalBags = sum(Total_luggage_No),
meanBags = round(mean(Total_luggage_No),digits=1),
netRevenue = round((sum(transaction_payment_total) - sum(Transaction_payment_credit))/1.2, digits=2),
promoDiscounts = -(sum(Booking_value_total_promotional_discount) + sum(AirPortr_user_booking_value_price_adjustment)),
otherDiscounts = -(-sum(AirPortr_user_booking_value_price_adjustment) + sum(Transaction_payment_credit))
)
temp$meanNetRevenue <- round(temp$netRevenue/temp$bookings, digits = 2)
temp$meanGrossRevenue <- round(temp$meanNetRevenue*1.2, digits = 2)
if (pretty){  # cleans up temp into a compact data frame for use with summary tables
temp <- temp[c(index,"bookings","totalBags","meanBags","netRevenue","promoDiscounts","meanGrossRevenue")]
temp$netRevenue <- sapply(temp$netRevenue*1.2,toCurrency)
temp$promoDiscounts <- sapply(temp$promoDiscounts,toCurrency)
#temp$meanGrossRevenue <- sapply(temp$meanGrossRevenue,toCurrency)
# use shorter names for a more compact table
colnames(temp) <- c(index,"bkgs","bags","avgBag","Revenue","promos","avgRevenue")
# reorder according to relevance
temp <- temp[with(temp,order(-bkgs,-avgRevenue)), ]
rownames(temp) <- NULL
}
return(temp)
}
flights <- summarizeMI(bookings, "In-bound_flt_code")
flights <- summarizeMI(bookings, "In.bound_flt_code")
flights <- ddply(bookings, "In.bound_flt_code", summarise, count=length(Cancelled))
View(flights)
?grep
regexpr("^.{2}","TP338")
grep("^.{2}","TP338")
gsub
gsub("^.{2}","TP338")
sub("^.{2}","","TP338")
airCode <- sub("\d","","TP338")
airCode <- sub("/d","","TP338")
sub("\d","","TP338")
sub("\d*","","TP338")
sub('\d*',"","TP338")
sub(\d*,"","TP338")
gsub("[^0-9]","","TP338")
gsub("[^A-Z]","","TP338")
Sys.Date
Sys.Date()
year(Sys.Date())
day(Sys.Date())
month(Sys.Date())
getFlightData <- function(flight){
airCode <- gsub("[^A-Z]","",flight)
flightCode <- sub("^.{2}","",flight)
url <- "https://microsoft-apiappcaadd5d5acd24a7888196adc2a5fbfd8.azurewebsites.net:443/api/FlightStatus/GetFlightStatus"
headers <- c(
'username'= "jdpiquard@portr.com",
'password'= "b0rnh0lt")
body <- list(
'flightCode'= airCode,
'flightNumber'= flightCode,
'year'= year(Sys.Date()),
'month'= month(Sys.Date()),
'day'= day(Sys.Date()),
'flightDirection'= 1
)
#   #Example
#   url <- "https://microsoft-apiappcaadd5d5acd24a7888196adc2a5fbfd8.azurewebsites.net:443/api/FlightStatus/GetFlightStatus"
#   headers <- c(
#     'username'= "jdpiquard@portr.com",
#     'password'= "b0rnh0lt")
#   body <- list(
#     'flightCode'= "TP",
#     'flightNumber'= "338",
#     'year'= "2015",
#     'month'= "10",
#     'day'= "26",
#     'flightDirection'= 1
#     )
r <- POST(url, body=body, encode="json",
add_headers(headers))
return(content(r,"parsed"))
}
getFlightData(BA001)
gsub("[^A-Z]","","BA001")
getFlightData("BA001")
newurl <- ""https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/BA/001/dep/2015/10/26?appId=56f3b5ac&appKey=cf16f327e32cee506850653cd206e54b&utc=false""
newurl <- https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/BA/001/dep/2015/10/26?appId=56f3b5ac&appKey=cf16f327e32cee506850653cd206e54b&utc=false"
newurl <- "https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/BA/001/dep/2015/10/26?appId=56f3b5ac&appKey=cf16f327e32cee506850653cd206e54b&utc=false"
newR <- httr(url)
newR <- GET(url)
newR
newR <- GET(newurl)
newR
newRContent <- content(newR,"parsed")
newRContent
newRContent[[1]]
newRContent[[2]]
Content <- content(newR,"parsed")
depCode <- Content[[2]]$airports[[1]]fs
Content <- content(newR,"parsed")
depCode <- Content[[2]]$airports[[1]]fs
depCode <- Content$appendix$airports[[1]]fs
depCode <- Content$appendix$airports[[1]]$fs
depCode
flightStatus <- function(flight){
newurl <- "https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/BA/001/dep/2015/10/26?appId=56f3b5ac&appKey=cf16f327e32cee506850653cd206e54b&utc=false"
newR <- GET(newurl)
Content <- content(newR,"parsed")
return(list(
depCode= Content$appendix$airports[[1]]$fs,
depAirport= Content$appendix$airports[[1]]$name,
depCity= Content$appendix$airports[[1]]$city,
arrCode= Content$appendix$airports[[2]]$fs,
arrAirport= Content$appendix$airports[[2]]$name,
arrCity= Content$appendix$airports[[2]]$city
))
#   depCode <- Content$appendix$airports[[1]]$fs
#   depAirport <- Content$appendix$airports[[1]]$name
#   depCity <- Content$appendix$airports[[1]]$city
}
flightStatus <- function(){
newurl <- "https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/BA/001/dep/2015/10/26?appId=56f3b5ac&appKey=cf16f327e32cee506850653cd206e54b&utc=false"
newR <- GET(newurl)
Content <- content(newR,"parsed")
return(list(
depCode= Content$appendix$airports[[1]]$fs,
depAirport= Content$appendix$airports[[1]]$name,
depCity= Content$appendix$airports[[1]]$city,
arrCode= Content$appendix$airports[[2]]$fs,
arrAirport= Content$appendix$airports[[2]]$name,
arrCity= Content$appendix$airports[[2]]$city
))
#   depCode <- Content$appendix$airports[[1]]$fs
#   depAirport <- Content$appendix$airports[[1]]$name
#   depCity <- Content$appendix$airports[[1]]$city
}
flightStatus
flightStatus()
flightDepArr <- function(){
newurl <- "https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/BA/001/dep/2015/10/26?appId=56f3b5ac&appKey=cf16f327e32cee506850653cd206e54b&utc=false"
newR <- GET(newurl)
Content <- content(newR,"parsed")
return(list(
depCode= Content$appendix$airports[[1]]$fs,
depAirport= Content$appendix$airports[[1]]$name,
depCity= Content$appendix$airports[[1]]$city,
depCountry= Content$appendix$airports[[1]]$countryName,
arrCode= Content$appendix$airports[[2]]$fs,
arrAirport= Content$appendix$airports[[2]]$name,
arrCity= Content$appendix$airports[[2]]$city,
depCountry= Content$appendix$airports[[2]]$countryName
))
#   depCode <- Content$appendix$airports[[1]]$fs
#   depAirport <- Content$appendix$airports[[1]]$name
#   depCity <- Content$appendix$airports[[1]]$city
}
airCode <- gsub("[^A-Z]","","BA001")
flightCode <- gsub("^.{2}","","BA001")
urlstart <- "https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/"
urlend <- "?appId=56f3b5ac&appKey=cf16f327e32cee506850653cd206e54b&utc=false"
request <- paste(airCode,flightCode,"dep",year(Sys.Date()),month(Sys.Date()),day(Sys.Date()),sep="/")
newurl <- paste(urlstart,request,urlend,sep="")
newurl
flightDepArr <- function(flight){
airCode <- gsub("[^A-Z]","","BA001")
flightCode <- gsub("^.{2}","","BA001")
urlstart <- "https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/"
urlend <- "?appId=56f3b5ac&appKey=cf16f327e32cee506850653cd206e54b&utc=false"
request <- paste(airCode,flightCode,"dep",year(Sys.Date()),month(Sys.Date()),day(Sys.Date()),sep="/")
newurl <- paste(urlstart,request,urlend,sep="")
newR <- GET(newurl)
Content <- content(newR,"parsed")
return(list(
depCode= Content$appendix$airports[[1]]$fs,
depAirport= Content$appendix$airports[[1]]$name,
depCity= Content$appendix$airports[[1]]$city,
depCountry= Content$appendix$airports[[1]]$countryName,
arrCode= Content$appendix$airports[[2]]$fs,
arrAirport= Content$appendix$airports[[2]]$name,
arrCity= Content$appendix$airports[[2]]$city,
depCountry= Content$appendix$airports[[2]]$countryName
))
#   depCode <- Content$appendix$airports[[1]]$fs
#   depAirport <- Content$appendix$airports[[1]]$name
#   depCity <- Content$appendix$airports[[1]]$city
}
flightDepArr("BA001")
flightDepArr("BA 007")
# The following goes directly to FlightStats
flightDepArr <- function(flight){
airCode <- gsub("[^A-Z]","",flight)
flightCode <- gsub("^.{2}","",flight)
urlstart <- "https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/"
urlend <- "?appId=56f3b5ac&appKey=cf16f327e32cee506850653cd206e54b&utc=false"
request <- paste(airCode,flightCode,"dep",year(Sys.Date()),month(Sys.Date()),day(Sys.Date()),sep="/")
newurl <- paste(urlstart,request,urlend,sep="")
newR <- GET(newurl)
Content <- content(newR,"parsed")
return(list(
depCode= Content$appendix$airports[[1]]$fs,
depAirport= Content$appendix$airports[[1]]$name,
depCity= Content$appendix$airports[[1]]$city,
depCountry= Content$appendix$airports[[1]]$countryName,
arrCode= Content$appendix$airports[[2]]$fs,
arrAirport= Content$appendix$airports[[2]]$name,
arrCity= Content$appendix$airports[[2]]$city,
depCountry= Content$appendix$airports[[2]]$countryName
))
#   depCode <- Content$appendix$airports[[1]]$fs
#   depAirport <- Content$appendix$airports[[1]]$name
#   depCity <- Content$appendix$airports[[1]]$city
}
flightDepArr("BA 007")
flightDepArr("BA007")
# The following goes directly to FlightStats
flightDepArr <- function(flight){
airCode <- gsub("[^A-Z]","",flight)
flightCode <- gsub("[^0-9]","",flight)
urlstart <- "https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/"
urlend <- "?appId=56f3b5ac&appKey=cf16f327e32cee506850653cd206e54b&utc=false"
request <- paste(airCode,flightCode,"dep",year(Sys.Date()),month(Sys.Date()),day(Sys.Date()),sep="/")
newurl <- paste(urlstart,request,urlend,sep="")
newR <- GET(newurl)
Content <- content(newR,"parsed")
return(list(
depCode= Content$appendix$airports[[1]]$fs,
depAirport= Content$appendix$airports[[1]]$name,
depCity= Content$appendix$airports[[1]]$city,
depCountry= Content$appendix$airports[[1]]$countryName,
arrCode= Content$appendix$airports[[2]]$fs,
arrAirport= Content$appendix$airports[[2]]$name,
arrCity= Content$appendix$airports[[2]]$city,
depCountry= Content$appendix$airports[[2]]$countryName
))
}
flightDepArr("BA 007")
as.data.frame(flightDepArr("BA 007"))
test <- as.data.frame(flightDepArr("BA 007"))
View(test)
test2 <- rbind(test, as.data.frame(flightDepArr("BA 192"))
)
View(test2)
# The following goes directly to FlightStats
flightDepArr <- function(flight){
airCode <- gsub("[^A-Z]","",flight)
flightCode <- gsub("[^0-9]","",flight)
urlstart <- "https://api.flightstats.com/flex/flightstatus/rest/v2/json/flight/status/"
urlend <- "?appId=56f3b5ac&appKey=cf16f327e32cee506850653cd206e54b&utc=false"
request <- paste(airCode,flightCode,"dep",year(Sys.Date()),month(Sys.Date()),day(Sys.Date()),sep="/")
newurl <- paste(urlstart,request,urlend,sep="")
newR <- GET(newurl)
Content <- content(newR,"parsed")
return(list(
flight= flight,
depCode= Content$appendix$airports[[1]]$fs,
depAirport= Content$appendix$airports[[1]]$name,
depCity= Content$appendix$airports[[1]]$city,
depCountry= Content$appendix$airports[[1]]$countryName,
arrCode= Content$appendix$airports[[2]]$fs,
arrAirport= Content$appendix$airports[[2]]$name,
arrCity= Content$appendix$airports[[2]]$city,
depCountry= Content$appendix$airports[[2]]$countryName
))
}
View(flights)
for(i in 1:length(flight)){}
out <- as.data.frame(flightDepArr("BA002"))
for(i in 2:length(flights)){
temp <- as.data.frame(flightDepArr(flights[i,1]))
out <- rbind(out,temp)
}
flights[2,] <- NULL
View(flights)
temp <- as.data.frame(flightDepArr(flights[3,1]))
temp
temp <- as.data.frame(flightDepArr(flights[2,1]))
flightDepArr(flights[2,1])
smth <- flightDepArr(flights[2,1])
smth[is.null(smth)] <- 0
smth
is.null(smth)
is.null(smth[[1]])
is.NULL(smth)
is.null(smth[[2]])
out <- as.data.frame(flightDepArr("BA002"))
for(i in 2:length(flights)){
temp <- flightDepArr(flights[i,1])
ifelse(is.null(temp[[2]]),
out <- out,
out <- rbind(out,temp)
)
}
out
i
out <- as.data.frame(flightDepArr("BA002"))
for(i in 2:length(flights)){
temp <- flightDepArr(flights[i,1])
if(is.null(temp[[2]]){}
else{out <- rbind(out,temp)}
}
for(i in 2:length(flights)){
temp <- flightDepArr(flights[i,1])
if(is.null(temp[[2]])
else{out <- rbind(out,temp)}
}
for(i in 2:length(flights)){
temp <- flightDepArr(flights[i,1])
if (is.null(temp[[2]]) {
} else {
out <- rbind(out,temp)
}
}
length(flights)
length(flights[,1])
out <- as.data.frame(flightDepArr("BA002"))
for(i in 2:length(flights[,1])){
temp <- flightDepArr(flights[i,1])
if (is.null(temp[[2]]) {
} else {
out <- rbind(out,temp)
}
}
for(i in 2:length(flights[,1])){
temp <- flightDepArr(flights[i,1])
ifelse(is.null(temp[[2]]), out <- out, out <- rbind(out,temp))
}
out
out <- as.data.frame(flightDepArr("BA002"))
for(i in 2:length(flights[,1])){
temp <- flightDepArr(flights[i,1])
ifelse(is.null(temp[[2]]), out <- out, out <- rbind(out,as.data.frame(temp)))
}
View(out)
i
for(i in 92:length(flights[,1])){
temp <- flightDepArr(flights[i,1])
ifelse(is.null(temp[[2]]), out <- out, out <- rbind(out,as.data.frame(temp)))
}
View(out)
i
for(i in 110:length(flights[,1])){
temp <- flightDepArr(flights[i,1])
ifelse(is.null(temp[[2]]), out <- out, out <- rbind(out,as.data.frame(temp)))
}
View(out)
