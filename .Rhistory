install.package('shiny')
install.packages('shiny')
install.packages('shinyApps')
install.packages('shinyapps')
install.packages('ggmap')
install.packages('ggplot2')
require(shiny)
require(rCharts)
require(plyr)
require(lubridate)
require(ggmap)
require(ggplot2)
require(googleVis)
datapath <- '/Users/JD/Downloads/bookings (11).csv'
#Reading Script
bookings <- read.csv(datapath)
# start cleaning up data
colnames(bookings)[1] <- "Booking_reference"  # Seems to solve corrupted header name
# remember conversion into date, considering format
bookings$day <- weekdays(as.Date(bookings$Outward_Journey_Luggage_drop_off_date, format = "%d/%m/%Y"))
bookings$month <- month(as.Date(bookings$Outward_Journey_Luggage_drop_off_date, format = "%d/%m/%Y"))
bookings$year <- year(as.Date(bookings$Outward_Journey_Luggage_drop_off_date, format = "%d/%m/%Y"))
bookings$date  <- as.Date(bookings$Outward_Journey_Luggage_drop_off_date, format = "%d/%m/%Y")
bookings$rank  <- as.Date(paste0(bookings$year,'-',bookings$month,'-01'),"%Y-%m-%d")
bookings$Outward_Journey_Luggage_Collection_date <- as.Date(bookings$Outward_Journey_Luggage_Collection_date, format = "%d/%m/%Y")
bookingsKeep <- bookings
# Cleaning up postCodes
bookings$from <- as.character(bookings$Outward_Journey_Luggage_collection_location_addresss_Postcode)
bookings$to <- as.character(bookings$Outward_Journey_Luggage_drop_off_location_addresss_Postcode)
# Cleaning up flight codes
bookings$In.bound_flt_code <- gsub(" ", "", bookings$In.bound_flt_code, fixed = TRUE)
bookings$In.bound_flt_code  <- toupper(bookings$In.bound_flt_code)
bookings$Out.bound_flt_code <- gsub(" ", "", bookings$Out.bound_flt_code, fixed = TRUE)
bookings$Out.bound_flt_code  <- toupper(bookings$Out.bound_flt_code)
# JD for Portr LTD
# Generic functions for use with MI
# MAIN FILTER FUNCTION
bookFilter <- function(df, airports, range, onlyNonZero = F, rangeMode = F){
# Subsets data frame by airport and booking dates (optional)
#
# Args:
#   df: MI data.frame, may require to be cleaned up
#   airports: vector of airports to show (a string may be used if only one airport is required)
#   range: optional vector with dates range to show (only used if Range is set)
#   onlyNonZero: if True, only shows bookings with value above zero
#   rangeMode: if True, also filters data frame by booking date, requires range argument to be set
#
# Returns:
#   Data frame with only the relevant rows
# allow toggling of showing zero value bookings
if(onlyNonZero){
df <- subset(df, Transaction_payment > 0) #exclude promotional or internal deliveries
}
else{df <- subset(df, Transaction_payment >= 0)}
# REPORT MODE OPTION
if(rangeMode){
df <- subset(df, date>=range[1]&date<=range[2])
}
# filtering by airport
# THIS VERSION OF THE FILTER NOW SEEMS TO BE WORKING
df$filter  <-
(grepl(paste(airports,collapse="|"),  # Find airport names
df$Outward_Journey_Luggage_collection_location_Name,ignore.case=TRUE)
&grepl("airportterminal",  # Only accept those marked as airports
df$Outward_Journey_Luggage_collection_location_Type,ignore.case=TRUE)
&!grepl("storage",  # Ignore luggage storage options
df$Outward_Journey_Luggage_collection_location_Name,ignore.case=TRUE)
)|(
grepl(paste(airports,collapse="|"),
df$Outward_Journey_Luggage_drop_off_location_Name,ignore.case=TRUE)
&grepl("airportterminal",
df$Outward_Journey_Luggage_drop_off_location_Type,ignore.case=TRUE)
&!grepl("storage",
df$Outward_Journey_Luggage_drop_off_location_Name,ignore.case=TRUE)
)|(
grepl("storage",
df$Outward_Journey_Luggage_collection_location_Name,ignore.case=TRUE)
&sum(grepl('Other',
airports,ignore.case=T))
)|(
grepl("storage",
df$Outward_Journey_Luggage_drop_off_location_Name,ignore.case=TRUE)
&sum(grepl('Other',
airports,ignore.case=T)))
df <- df[df$filter == 1,]
return(df)
}
dates <- c(as.Date("2014-05-22", format= "%Y-%m-%d"),Sys.Date())
bookLGW <- bookFilter(bookings,"Gatwick",dates,onlyNonZero=T,rangeMode=T)
c(bookLGW[,c(date,Booking_reference)])
c(bookLGW[,c("date","Booking_reference")])
bookLGW[,c("date","Booking_reference")]
?rowNames
rownames(bookLGW) <- NULL
l <- length(bookLGW$cancelled)
l
l <- length(bookLGW$Cancelled)
l
data.frame(3,5)
matrix(nrow=l,ncol=1)
matrix(nrow=l,ncol=1) <- "AP"
test <- matrix(nrow=l,ncol=1)
test <- "AP"
test
test[,1] <- "AP"
test <- data.frame(nrow=l,ncol=1)
test[,1] <- "A"
test[,1] <- "AP"
test
l
?as.dataframe
?as.dataFrame
?as.data.frame
as.data.frame(matrix(ncol=l,nrow=1))
as.data.frame(matrix(nrow=l,ncol=1))
as.data.frame(matrix(nrow=l,ncol=1)) <- "AP"
as.data.frame(matrix(nrow=l,ncol=1))[,1] <- "AP"
test <- as.data.frame(matrix(nrow=l,ncol=1))[,1]
test <- "AP"
test <- as.data.frame(matrix(nrow=l,ncol=1))[,1]
test[,1] <- "AP"
test <- as.data.frame(matrix(nrow=l,ncol=l))
test <- as.data.frame(matrix(nrow=l,ncol=2))
test[,1] <- "AP"
test[,2] <- "AirPortr"
c(test,bookLGW)
c(test,bookLGW[,c("date","Booking_reference","Transaction_payment")])
data1 <- bookLGW[,c("date","Booking_reference","Transaction_payment")]
merge(test,data1)
?merge
cbind(test,data1)
info1 <- as.data.frame(matrix(nrow=l,ncol=2))
info1[,1] <- "AP"
info1[,2] <- "*ShopCOde*"
names(info1) <- c("Retailer","Shop Code")
View(info1)
library(shiny)
setwd("/Users/JD/OneDrive/AirPortr/Analytics/ShinyDashOne/Dash-Two")
runAp()
runApp()
